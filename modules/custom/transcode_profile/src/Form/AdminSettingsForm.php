<?php

namespace Drupal\transcode_profile\Form;

use Drupal\Core\Entity\EntityTypeManager;
use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Config\ConfigFactory;
use Drupal\Core\Entity\EntityManager;
use Symfony\Component\DependencyInjection\ContainerInterface;


/**
 * Class AdminSettingsForm.
 */
class AdminSettingsForm extends ConfigFormBase {

  protected $config_factory;
  protected $entity_type_manager;

  public function __construct(ConfigFactoryInterface $config_factory,
                              ConfigFactory $config_factory,
                              EntityTypeManager $entityTypeManager)
  {
    parent::__construct($config_factory);
    $this->config_factory=$config_factory;
    $this->entity_type_manager=$entityTypeManager;
  }

  public static function create(ContainerInterface $container) {
//    return parent::create($container); // TODO: Change the autogenerated stub
    return new static(
      $container->get('config.factory'),
      $container->get('config.factory'),
      $container->get('entity_type.manager')
    );
  }

  /**
   * {@inheritdoc}
   */
  protected function getEditableConfigNames() {
    return [
      'transcode_profile.adminsettings',
    ];
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'admin_settings_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $config = $this->config('transcode_profile.adminsettings');

    $transcode_profiles=$this->entity_type_manager
      ->getStorage('transcode_profile')->loadMultiple();
    $dropdown_array=[];
    foreach ($transcode_profiles as $profile)
    {
      $key=$profile->id();
      $value=$profile->label();
      $dropdown_array[$key]=$value;
    }
    $form['profile_name'] = [
      '#type' => 'select',
      '#title' => $this->t('Profile Name'),
      '#description' => $this->t('Video Transcode profile name'),
      '#default_value' => $config->get('profile_id'),
      '#options'=>$dropdown_array
    ];
    $form['enable_transcoding'] = [
      '#type' => 'checkbox',
      '#title' => $this->t('Enable Transcoding'),
      '#description' => $this->t('Enables Video Transcoding'),
      '#default_value' => $config->get('enable_transcoding'),
    ];
    return parent::buildForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    parent::validateForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    parent::submitForm($form, $form_state);

    $this->config('transcode_profile.adminsettings')
      ->set('profile_name', $form_state->getValue('profile_name'))
      ->set('enable_transcoding', $form_state->getValue('enable_transcoding'))
      ->save();
  }

}
